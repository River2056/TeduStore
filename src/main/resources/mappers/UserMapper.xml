<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="cn.tedu.store.mapper.UserMapper">
	
	<!-- 增加用戶數據 -->
	<!-- void insert(User user) -->
	<insert id="insert" parameterType="cn.tedu.store.bean.User" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO 
			t_user (username, password, phone, email, gender, 
			created_user, created_time, modified_user, modified_time) 
		VALUES 
			(#{username}, #{password}, #{phone}, #{email}, #{gender}, 
			#{createdUser}, #{createdTime}, #{modifiedUser}, #{modifiedTime})
	</insert>
	
	<!-- 根據用戶名查詢用戶訊息 -->
	<!-- User findUserByUsername(String username) -->
	<select id="findUserByUsername" resultType="cn.tedu.store.bean.User">
		SELECT 
			id, username, password, phone, email, gender,
			created_user AS createdUser, 
			created_time AS createdTime, 
			modified_user AS modifiedUser, 
			modified_time AS modifiedTime 
		FROM 
			t_user 
		WHERE 
			username = #{username}
	</select>
	
	<!-- 根據用戶ID查找用戶 -->
	<!-- User findUserById(Integer id) -->
	<select id="findUserById" resultType="cn.tedu.store.bean.User">
		SELECT 
			id, username, password, phone, email, gender,
			created_user AS createdUser, 
			created_time AS createdTime, 
			modified_user AS modifiedUser, 
			modified_time AS modifiedTime  
		FROM 
			t_user 
		WHERE 
			id = #{id}
	</select>
	
	<!-- 根據用戶電話檢查個數 -->
	<!-- Integer getRecordCountByPhone(String phone) -->
	<select id="getRecordCountByPhone" resultType="java.lang.Integer">
		SELECT 
			COUNT(id) 
		FROM 
			t_user 
		WHERE 
			phone = #{phone}
	</select>
	
	<!-- 獲取電子信箱對應的數據數量 -->
	<!-- Integer getRecordCountByEmail(String email) -->
	<select id="getRecordCountByEmail" resultType="java.lang.Integer">
		SELECT 
			COUNT(id) 
		FROM 
			t_user 
		WHERE 
			email = #{email}
	</select>
	
	<!-- 修改用戶數據 -->
	<!-- Integer update(User user) -->
	<update id="update" parameterType="cn.tedu.store.bean.User">
		UPDATE 
			t_user 
		SET 
			<if test="password != null">
				password = #{password},
			</if>
			
			<if test="username != null">
				username = #{username},
			</if>
			
			<if test="gender != null">
				gender = #{gender},
			</if>
			
			<if test="phone != null">
				phone = #{phone},
			</if>
			
			<if test="email != null">
				email = #{email},
			</if>
			
			modified_user = #{modifiedUser},
			modified_time = #{modifiedTime} 
		WHERE 
			id = #{id}
	</update>
	
</mapper>







